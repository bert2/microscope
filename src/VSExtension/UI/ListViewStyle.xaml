<!--  Code adapted from https://github.com/microsoft/VSSDK-Extensibility-Samples/blob/master/ArchivedSamples/WPF_Toolwindow/C%23/ListViewStyle.xaml  -->

<!--
  Copyright (c) Microsoft Corporation. All rights reserved.
  THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
  ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
  IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
  PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
-->

<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vsp="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">
  <!--
    Defines themes for ListView.  This theme is tied into dynamic Visual Studio colors, so
    when the Visual Studio theme changes between Light, Dark, High Contrast, or a custom theme,
    the ListView's style updates accordingly.
  -->

  <!--  ListView Item Control Template  -->
  <ControlTemplate x:Key="ListViewItemTemplate" TargetType="{x:Type ListViewItem}">
    <!--  Simplified template of the default List*View* Style, removes much of the chrome  -->
    <Border
      Margin="{TemplateBinding Margin}"
      Padding="{TemplateBinding Padding}"
      Background="{TemplateBinding Background}"
      SnapsToDevicePixels="True">
      <GridViewRowPresenter
        Grid.RowSpan="2"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
    </Border>
    <ControlTemplate.Triggers>
      <!--  Hover  -->
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsp:SearchControlColors.PopupControlMouseDownBackgroundGradientBeginBrushKey}}" />
      </Trigger>

      <!--  Selected  -->
      <Trigger Property="IsSelected" Value="True">
        <!--
          A subset of TreeViewColors are used for applying styles to the ListView.  A TreeView is
          has a superset of the colors required by a ListView (for expanders).
        -->
        <Setter Property="Background" Value="{DynamicResource {x:Static vsp:CommonControlsColors.ButtonBorderPressedBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:EnvironmentColors.SystemHighlightTextBrushKey}}" />
      </Trigger>

      <!--  Selected but not active (control focused)  -->
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="True" />
          <Condition Property="Selector.IsSelectionActive" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource {x:Static vsp:CommonControlsColors.ButtonBorderDisabledBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:TreeViewColors.SelectedItemInactiveTextBrushKey}}" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  List View Item Style  -->
  <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
    <Setter Property="Padding" Value="2" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Template" Value="{StaticResource ListViewItemTemplate}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:EnvironmentColors.CommandBarTextActiveBrushKey}}" />
  </Style>

  <!--  ListView Style  -->
  <Style TargetType="{x:Type ListView}">
    <Style.Resources>
      <!--  Override the template for the scrollviewer to adjust the margins on the header of the list view  -->
      <!--  Default WPF styles give you 2px left and right padding on the header row.  -->
      <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ScrollViewer">
              <Grid Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <DockPanel Margin="{TemplateBinding Padding}">
                  <ScrollViewer
                    DockPanel.Dock="Top"
                    Focusable="false"
                    HorizontalScrollBarVisibility="Hidden"
                    VerticalScrollBarVisibility="Hidden">
                    <GridViewHeaderRowPresenter Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}">
                      <GridViewHeaderRowPresenter.ColumnHeaderContainerStyle>
                        <Style TargetType="GridViewColumnHeader">
                          <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                      </GridViewHeaderRowPresenter.ColumnHeaderContainerStyle>
                    </GridViewHeaderRowPresenter>
                  </ScrollViewer>

                  <ScrollContentPresenter
                    Name="PART_ScrollContentPresenter"
                    CanContentScroll="True"
                    CanHorizontallyScroll="False"
                    CanVerticallyScroll="False"
                    KeyboardNavigation.DirectionalNavigation="Local" />
                </DockPanel>

                <ScrollBar
                  Name="PART_HorizontalScrollBar"
                  Grid.Row="1"
                  Maximum="{TemplateBinding ScrollableWidth}"
                  Orientation="Horizontal"
                  ViewportSize="{TemplateBinding ViewportWidth}"
                  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                  Value="{TemplateBinding HorizontalOffset}" />

                <ScrollBar
                  Name="PART_VerticalScrollBar"
                  Grid.Column="1"
                  Maximum="{TemplateBinding ScrollableHeight}"
                  ViewportSize="{TemplateBinding ViewportHeight}"
                  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                  Value="{TemplateBinding VerticalOffset}" />

              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </Style.Resources>

    <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItemStyle}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="Transparent" />
  </Style>
</ResourceDictionary>
